# Copyright 2020 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Entity Types - test with collisions of entity types between regs and entities

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create registration with types T1 and T2, and attrs brandName+isParked
# 02. Create registration with types T1 and T3, and attrs speed+isNotParked
# 03. GET Entity Types - see three types (T1-T3)
# 04. GET Entity Types WITH details - see three types (T1-T3)
#

echo "01. Create registration with types T1 and T2, and attrs brandName+isParked"
echo "=========================================================================="
payload='{
  "id": "urn:ngsi-ld:reg:1",
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "id": "urn:ngsi-ld:entity:E1",
          "type": "T1"
        },
        {
          "id": "urn:ngsi-ld:entity:E2",
          "type": "T2"
        }
      ],
      "properties": [ "brandName" ],
      "relationships": [ "isParked" ]
    }
  ],
  "endpoint": "http://my.csource.org:1026"
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
echo
echo


echo "02. Create registration with types T1 and T3, and attrs speed+isNotParked"
echo "========================================================================="
payload='{
  "id": "urn:ngsi-ld:reg:2",
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "id": "urn:ngsi-ld:entity:E1",
          "type": "T1"
        },
        {
          "id": "urn:ngsi-ld:entity:E3",
          "type": "T3"
        }
      ],
      "properties": [ "speed" ],
      "relationships": [ "isNotParked" ]
    }
  ],
  "endpoint": "http://my.csource.org:1026"
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
echo
echo


echo "03. GET Entity Types - see three types (T1-T3)"
echo "=============================================="
orionCurl --url /ngsi-ld/v1/types
echo
echo


echo "04. GET Entity Types WITH details - see three types (T1-T3)"
echo "==========================================================="
orionCurl --url /ngsi-ld/v1/types?details=true
echo
echo


--REGEXPECT--
01. Create registration with types T1 and T2, and attrs brandName+isParked
==========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/csourceRegistrations/urn:ngsi-ld:reg:1
Date: REGEX(.*)



02. Create registration with types T1 and T3, and attrs speed+isNotParked
=========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/csourceRegistrations/urn:ngsi-ld:reg:2
Date: REGEX(.*)



03. GET Entity Types - see three types (T1-T3)
==============================================
HTTP/1.1 200 OK
Content-Length: 124
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "id": "urn:ngsi-ld:EntityTypeList:REGEX(.*)",
    "type": "EntityTypeList",
    "typeList": [
        "T1",
        "T2",
        "T3"
    ]
}


04. GET Entity Types WITH details - see three types (T1-T3)
===========================================================
HTTP/1.1 200 OK
Content-Length: 
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

[
    {
        "attributeNames": [
            "brandName",
            "isParked",
            "isNotParked",
            "speed"
        ],
        "id": "urn:ngsi-ld:entity:E1",
        "type": "EntityType",
        "typeName": "T1"
    },
    {
        "attributeNames": [
            "isNotParked",
            "speed"
        ],
        "id": "urn:ngsi-ld:entity:E3",
        "type": "EntityType",
        "typeName": "T3"
    },
    {
        "attributeNames": [
            "brandName",
            "isParked"
        ],
        "id": "urn:ngsi-ld:entity:E2",
        "type": "EntityType",
        "typeName": "T2"
    }
]




--TEARDOWN--
brokerStop CB
dbDrop CB
