# Copyright 2018 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Entity Creation - should create an entity with JSON-LD @context as a vector of URIs

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 0-255 --prettyPrint

--SHELL--

#
# 01. POST /ngsi-ld/v1/entities with JSON-LD @context as a vector of URIs
# 03. GET entity
#

echo "01. POST /ngsi-ld/v1/entities with JSON-LD @context as a vector of URIs"
echo "======================================================================="
payload='{
  "id": "urn:ngsi-ld:T:12:13:14",
  "type": "T",
  "DateProp": {
    "type": "Property",
    "value": "2018-12-04T12:00:00"
  },
  "@context": [ "https://fiware.github.io/NGSI-LD_Tests/ldContext/testFullContext.jsonld" ]
}'
orionCurl --url /ngsi-ld/v1/entities -X POST --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "02. Checking mongo content to see URL"
echo "====================================="
mongoCmd2 ftest "db.entities.findOne()"
echo
echo


echo "03. GET entity"
echo "=============="
orionCurl --url '/ngsi-ld/v1/entities/urn:ngsi-ld:T:12:13:14?prettyPrint=yes&spaces=2' --noPayloadCheck  -H "Accept: application/ld+json"
echo
echo


--REGEXPECT--
01. POST /ngsi-ld/v1/entities with JSON-LD @context as a vector of URIs
=======================================================================
HTTP/1.1 201 Created
Content-Length: 0
Link: http://REGEX(.*)/ngsi-ld/ex/v1/contexts/urn:ngsi-ld:T:12:13:14
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:T:12:13:14
Date: REGEX(.*)



02. Checking mongo content to see URL
=====================================
MongoDB shell version REGEX(.*)
connecting to: mongodb://localhost:27017/ftest
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:T:12:13:14",
		"type" : "http://example.org/ngsi-ld/default/T",
		"servicePath" : "/"
	},
	"attrNames" : [
		"@context",
		"http://example.org/ngsi-ld/default/DateProp"
	],
	"attrs" : {
		"@context" : {
			"type" : "ContextVector",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : [
				"https://fiware.github.io/NGSI-LD_Tests/ldContext/testFullContext.jsonld"
			],
			"mdNames" : [ ]
		},
		"http://example=org/ngsi-ld/default/DateProp" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : "2018-12-04T12:00:00",
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


03. GET entity
==============
HTTP/1.1 200 OK
Content-Length: 231
Content-Type: application/ld+json
Date: REGEX(.*)

{
  "id": "urn:ngsi-ld:T:12:13:14",
  "type": "T",
  "DateProp": {
    "type": "Property",
    "value": "2018-12-04T12:00:00"
  },
  "@context": [
    "https://fiware.github.io/NGSI-LD_Tests/ldContext/testFullContext.jsonld"
  ]
}



--TEARDOWN--
brokerStop CB
dbDrop CB
