# Copyright 2018 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Parse Contexts - three cases

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB

--SHELL--

#
# https://fiware.github.io/NGSI-LD_Tests/ldContext/testFullContext.jsonld:
# {
#   "@context": [
#     "https://fiware.github.io/NGSI-LD_Tests/ldContext/testContext.jsonld",
#     "https://forge.etsi.org/gitlab/NGSI-LD/NGSI-LD/raw/master/coreContext/ngsi-ld-core-context.json"
#   ]
# }
#
# https://fiware.github.io/NGSI-LD_Tests/ldContext/testContext.jsonld:
# {
#   "@context": {
#     "T": "http://example.org/T",
#     "T2": "http://example.org/T2",
#     "T3": "http://example.org/T3",
#     "P1": "http://example.org/P1",
#     "P2": "http://example.org/P2",
#     "P3": "http://example.org/P3",
#     "R1": "http://example.org/R1",
#     "R2": "http://example.org/R2",
#     "R3": "http://example.org/R3",
#     "P1_R1": "http://example.org/P1_R1",
#     "P1_P1": "http://example.org/P1_P1",
#     "R1_P1": "http://example.org/R1_P1",
#     "R1_R1": "http://example.org/R1_R1"
#   }
# }
#
# https://forge.etsi.org/gitlab/NGSI-LD/NGSI-LD/raw/master/coreContext/ngsi-ld-core-context.json:
# {
#   "@context": {
#     "id": "@id",
#     "type": "@type",
#     "value": "http://uri.etsi.org/ngsi-ld/hasValue",
#     "object": {
#       "@id": "http://uri.etsi.org/ngsi-ld/hasObject",
#       "@type":"@id"
#     },
#     "Property": "http://etsi.org/nsgi-ld/Property",
#     "Relationship": "http://uri.etsi.org/ngsi-ld/Relationship",
#     ...                                                                                                                                                                        
#   }
# }


#
# 01. POST /ngsi-ld/v1/entities, with a context that is a 'string reference' to another context that is a set of contexts
# 02. POST /ngsi-ld/v1/entities, with a context that is a 'string reference' to another context that is a 'simple' context
# 03. POST /ngsi-ld/v1/entities, with a context that is a vector of other contexts
#

echo "01. POST /ngsi-ld/v1/entities, with a context that is a 'string reference' to another context that is a set of contexts"
echo "======================================================================================================================="
payload='{
  "id": "E1",
  "type": "A",
  "name": {
    "type": "Property",
    "value": "John 2"
  },
  "@context": "https://fiware.github.io/NGSI-LD_Tests/ldContext/testFullContext.jsonld"
}'
orionCurl --url /ngsi-ld/v1/entities -X POST --payload "$payload"
echo
echo


echo "02. POST /ngsi-ld/v1/entities, with a context that is a 'string reference' to another context that is a 'simple' context"
echo "========================================================================================================================"
payload='{
  "id": "E1",
  "type": "A",
  "name": {
    "type": "Property",
    "value": "John 2"
  },
  "@context": "https://forge.etsi.org/gitlab/NGSI-LD/NGSI-LD/raw/master/coreContext/ngsi-ld-core-context.json"
}'
orionCurl --url /ngsi-ld/v1/entities -X POST --payload "$payload"
echo
echo


echo "03. POST /ngsi-ld/v1/entities, with a context that is a vector of other contexts"
echo "================================================================================"
payload='{
  "id": "E1",
  "type": "A",
  "name": {
    "type": "Property",
    "value": "John 2"
  },
  "@context": [
    "https://forge.etsi.org/gitlab/NGSI-LD/NGSI-LD/raw/master/coreContext/ngsi-ld-core-context.json",
    "https://fiware.github.io/NGSI-LD_Tests/ldContext/testContext.jsonld"
  ]
}'
orionCurl --url /ngsi-ld/v1/entities -X POST --payload "$payload"
echo
echo


--REGEXPECT--
01. POST /ngsi-ld/v1/entities, with a context that is a 'string reference' to another context that is a set of contexts
=======================================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/E1
Date: REGEX(.*)



02. POST /ngsi-ld/v1/entities, with a context that is a 'string reference' to another context that is a 'simple' context
========================================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/E1
Date: REGEX(.*)



03. POST /ngsi-ld/v1/entities, with a context that is a vector of other contexts
================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/E1
Date: REGEX(.*)



--TEARDOWN--
brokerStop CB
dbDrop CB
